### TEMPLATES

.prepare-build:
  stage: prepare
  image: docker.artifact.${NETWORK_DOMAIN}/infra/devops/node:22-bookworm
  script:
    - npm install
    - npm run build
  artifacts:
    expire_in: 1 week
    paths:
      - dist/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.kaniko:
  image:
    name: docker.artifact.${NETWORK_DOMAIN}/infra/devops/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    # Check variables are defined
    - \[ ! -z "${CI_REGISTRY}" ] # CI_REGISTRY is provided by GitLab
    - \[ ! -z "${CI_REGISTRY_USER}" ] # CI_REGISTRY_USER is provided by GitLab
    - \[ ! -z "${CI_REGISTRY_PASSWORD}" ] # CI_REGISTRY_PASSWORD is provided by GitLab
    # Configure Kaniko
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"username\":\"${CI_REGISTRY_USER}\",\"password\":\"${CI_REGISTRY_PASSWORD}\"}}}" > /kaniko/.docker/config.json
  stage: build
  environment:
    name: build
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - dist/
  tags:
    - k8s
  script:
    # Disable cache otherwise will 404 when retrieving wrong cached main.x.chunk.js filename
    # Flags to reduce memory usage below
    # Disable compressed caching to prevent tar compression for cached layers
    # Use experimental run implementation for detecting changes without requiring file system snapshots
    # Clean the file system at the end of the build
    - /kaniko/executor
      --cache=false
      --compressed-caching=false
      --use-new-run
      --cleanup
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile-deploy
      --destination ${CI_REGISTRY}/${CI_PROJECT_PATH}/scrollytelling:$CI_COMMIT_SHORT_SHA
      --destination ${CI_REGISTRY}/${CI_PROJECT_PATH}/scrollytelling:latest
      --target deploy
      --build-arg NETWORK_DOMAIN=$NETWORK_DOMAIN
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.deploy_template:
  stage: deploy
  image: docker.artifact.${NETWORK_DOMAIN}/infra/devops/alpine/k8s:1.21.2
  variables:
    NAMESPACE: scrollytelling
  when: manual
  script:
    - echo ${KUBECONFIG:?} > /dev/null
    - echo ${NAMESPACE:?} | grep -vq '[[:space:]]'
    - find ${CI_PROJECT_DIR}/deployment -type f -name "*.yml" -exec sed -i "s/\${NETWORK_DOMAIN}/${NETWORK_DOMAIN}/g" "{}" \;
    - kubectl create secret docker-registry gitlab-registry
      --docker-server=${CI_REGISTRY}
      --docker-username="${CI_REGISTRY_USER:?}"
      --docker-password="${CI_REGISTRY_PASSWORD:?}"
      -o yaml --dry-run=client | kubectl -n ${NAMESPACE} apply -f -
    - kubectl -n $NAMESPACE apply -k ${CI_PROJECT_DIR}/deployment/${NETWORK_DOMAIN}
    - kubectl -n "${NAMESPACE}" rollout restart deployment/scrollytelling-app
    - kubectl -n $NAMESPACE rollout status deployment scrollytelling-app
