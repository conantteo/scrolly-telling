FROM docker.artifact.${NETWORK_DOMAIN}/infra/devops/python:3.10-slim AS deploy
# RUN apk add --update --no-cache python3=3.12 python3-pip
# RUN apt-get install -y python3 python3-pip python3-venv && ln -sf python3 /usr/bin/python

# env var
ARG NETWORK_DOMAIN
ENV NETWORK_DOMAIN=${NETWORK_DOMAIN}

# Configure and upgrade pip, with workaround for weak certificates
# RUN pip config --global set global.index https://artifact.${NETWORK_DOMAIN}/artifactory/api/pypi/pypi/simple && \
#     pip config --global set global.index-url https://artifact.${NETWORK_DOMAIN}/artifactory/api/pypi/pypi/simple && \
#     pip config --global set global.cert /etc/ssl/certs/ca-certificates.crt && \
#     pip config --global set global.trusted-host artifact.${NETWORK_DOMAIN} && \
#     pip config --global set global.disable-pip-version-check true

# Set environment variables for Python libraries to use system CA bundle
# ENV REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt \
#     SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt \
#     TWINE_CERT=/etc/ssl/certs/ca-certificates.crt

# RUN python3 -m ensurepip
# RUN python3 -m venv /opt/venv
# RUN /opt/venv/bin/pip3 install --no-cache --upgrade pip setuptools

RUN mkdir /app
RUN mkdir /app/server
RUN mkdir /app/frontend

# COPY ./frontend/ /app/frontend/
COPY ./dist/ /app/frontend/dist
# COPY ./README.md /app/server/README.md
COPY ./pyproject.toml /app/server/pyproject.toml
COPY ./server/ /app/server/
# RUN rm -f /app/frontend/.env

# WORKDIR /app/frontend
# RUN npm install
# RUN npm run build

WORKDIR /app/server
RUN pip install .

EXPOSE 8001


WORKDIR /app
CMD ["uvicorn", "server.main:app",  "--host", "0.0.0.0", "--port", "8001", "--reload"]